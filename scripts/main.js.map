{
  "version": 3,
  "sources": ["../src/types/index.ts", "../src/translator.ts", "../src/handlers/settings-handler.ts", "../src/handlers/data-handler.ts", "../src/handlers/html-handler.ts", "../src/main.ts"],
  "sourcesContent": ["export const MODULE_NAME = 'translate-all';\r\n\r\nexport interface TranslateConfigSettingConfig {\r\n  'translate-all.apiKey': string;\r\n  'translate-all.targetSystem': string;\r\n  'translate-all.targetLanguage': string;\r\n  'translate-all.targetModel': string;\r\n  'translate-all.apiEndpoint': string;\r\n  'translate-all.promptTemplatePath': string;\r\n}\r\n\r\nexport type TranslateAllNamespace = typeof MODULE_NAME | ClientSettings.Namespace;\r\n\r\ntype GetKeys<\r\n  N extends string,\r\n  SettingPath extends PropertyKey,\r\n> = SettingPath extends `${N}.${infer Name}` ? Name : never;\r\nexport type KeyFor<N extends TranslateAllNamespace> = GetKeys<\r\n  N,\r\n  keyof TranslateConfigSettingConfig\r\n>;\r\n\r\nexport interface TranslateFunction {\r\n  (\r\n    app: JournalPageSheet | ItemSheet,\r\n    html: JQuery<HTMLElement>,\r\n    description: string,\r\n    path: string,\r\n  ): Promise<void>;\r\n}\r\n\r\nexport enum SupportedSystems {\r\n  DND5E = 'D&D5E',\r\n  PATHFINDER2E = 'PF2E',\r\n}\r\n\r\nexport enum SupportedLanguages {\r\n  ENGLISH = 'english',\r\n  ITALIAN = 'italian',\r\n}\r\n\r\nexport enum SupportedEntries {\r\n  JOURNAL = 'journal',\r\n  ITEM = 'item',\r\n}\r\n\r\nexport const Directories = {\r\n  [SupportedSystems.DND5E]: {\r\n    [SupportedEntries.JOURNAL]: 'text.content',\r\n    [SupportedEntries.ITEM]: 'system.description.value',\r\n  },\r\n  [SupportedSystems.PATHFINDER2E]: {\r\n    [SupportedEntries.JOURNAL]: 'text.content',\r\n    [SupportedEntries.ITEM]: 'system.description.value',\r\n  },\r\n};\r\n", "import { TranslateAllSettingHandler } from \"handlers/settings-handler\";\r\nimport { SupportedLanguages, SupportedSystems } from \"types\";\r\n\r\nexport class Translator {\r\n  static async translate(description: string): Promise<string | undefined> {\r\n    return await Translator.translateWithChatGPT(description);\r\n  }\r\n\r\n  static async getPromptTemplate(path: string, description: string): Promise<string> {\r\n    const promptTemplatePath = TranslateAllSettingHandler.getSetting(\"translate-all\", \"promptTemplatePath\") as string;\r\n    if (!promptTemplatePath) {\r\n      return \"\";\r\n    }\r\n    let promptTemplate = \"\";\r\n    if (promptTemplatePath) {\r\n      try {\r\n        const url = foundry.utils.getRoute(promptTemplatePath);\r\n        promptTemplate = await fetch(url).then((x) => x.text());\r\n      } catch (err) {\r\n        ui?.notifications?.warn(`Could not load prompt template. ${err}`);\r\n      }\r\n    }\r\n\r\n    return promptTemplate + `: ${description}`;\r\n  }\r\n\r\n  static async generatePrompt(\r\n    system: SupportedSystems,\r\n    language: SupportedLanguages,\r\n    description: string,\r\n  ): Promise<string> {\r\n    const path = TranslateAllSettingHandler.getSetting(\"translate-all\", \"promptTemplatePath\") as string;\r\n    let prompt = \"\";\r\n    if (path) {\r\n      prompt = await Translator.getPromptTemplate(path, description);\r\n    } else {\r\n      prompt = `Translate the following ${system} item/spell description into ${language}:\\n\\n\r\n            Keep the same format and structure, like HTML tags, and do not translate the item name or any specific game terms. \r\n            Don not add any additional code encapsulation or formatting. Just return the translated text.\\n\\n\r\n            ${description}.`;\r\n    }\r\n\r\n    return prompt;\r\n  }\r\n\r\n  static async getModels(): Promise<Record<string, string> | undefined> {\r\n    let response;\r\n    const apiKey = TranslateAllSettingHandler.getSetting(\"translate-all\", \"apiKey\");\r\n    const apiEndpoint = TranslateAllSettingHandler.getSetting(\"translate-all\", \"apiEndpoint\");\r\n\r\n    try {\r\n      response = await fetch(`${apiEndpoint}/models`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      ui?.notifications?.error(`ChatGPT API call failed. ${error}`);\r\n    }\r\n\r\n    if (!response?.ok) {\r\n      ui?.notifications?.error(\"ChatGPT API call failed.\");\r\n      return undefined;\r\n    }\r\n\r\n    const data = await response.json();\r\n    const models = data.data.reduce((acc: Record<string, string>, model: { id: string }) => {\r\n      acc[model.id] = model.id;\r\n      return acc;\r\n    }, {});\r\n    return models;\r\n  }\r\n\r\n  static async translateWithChatGPT(description: string): Promise<string | undefined> {\r\n    let response;\r\n    const apiKey = TranslateAllSettingHandler.getSetting(\"translate-all\", \"apiKey\");\r\n    const apiEndpoint = TranslateAllSettingHandler.getSetting(\"translate-all\", \"apiEndpoint\");\r\n    const system = TranslateAllSettingHandler.getSetting(\"translate-all\", \"targetSystem\") as SupportedSystems;\r\n    const language = TranslateAllSettingHandler.getSetting(\"translate-all\", \"targetLanguage\") as SupportedLanguages;\r\n    const model = TranslateAllSettingHandler.getSetting(\"translate-all\", \"targetModel\");\r\n    const prompt = await Translator.generatePrompt(system, language, description);\r\n\r\n    try {\r\n      response = await fetch(`${apiEndpoint}/chat/completions`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n        body: JSON.stringify({\r\n          model,\r\n          messages: [{ role: \"user\", content: prompt }],\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      ui?.notifications?.error(`ChatGPT API call failed. ${error}`);\r\n    }\r\n\r\n    if (!response?.ok) {\r\n      ui?.notifications?.error(\"ChatGPT API call failed.\");\r\n      return undefined;\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.choices?.[0]?.message?.content ?? undefined;\r\n  }\r\n}\r\n", "import { Translator } from \"../translator\";\r\nimport { KeyFor, SupportedSystems, TranslateAllNamespace } from \"../types\";\r\n\r\nexport class TranslateAllSettingHandler {\r\n  gameSettings: Game[\"settings\"] = game.settings!;\r\n  readonly settings = {\r\n    targetSystem: {\r\n      name: \"translate-all.settings.game.system.name\",\r\n      hint: \"translate-all.settings.game.system.hint\",\r\n      scope: \"world\",\r\n      config: true,\r\n      type: String,\r\n      default: SupportedSystems.PATHFINDER2E, // Default to Pathfinder 2e\r\n      choices: {\r\n        [SupportedSystems.DND5E]: \"D&D 5e\",\r\n        [SupportedSystems.PATHFINDER2E]: \"Pathfinder 2e\",\r\n      },\r\n    },\r\n    apiKey: {\r\n      name: \"translate-all.settings.apiKey.name\",\r\n      hint: \"translate-all.settings.apiKey.hint\",\r\n      scope: \"world\",\r\n      config: true,\r\n      type: String,\r\n      default: \"\",\r\n      masked: true,\r\n    },\r\n    apiEndpoint: {\r\n      name: \"translate-all.settings.apiEndpoint.name\",\r\n      hint: \"translate-all.settings.apiEndpoint.hint\",\r\n      scope: \"world\",\r\n      config: true,\r\n      type: String,\r\n      default: \"https://api.openai.com/v1\",\r\n    },\r\n    targetLanguage: {\r\n      name: \"translate-all.settings.language.name\",\r\n      hint: \"translate-all.settings.language.hint\",\r\n      scope: \"world\",\r\n      config: true,\r\n      type: String,\r\n      default: \"Italian\", // Default to Italian\r\n      masked: true,\r\n    },\r\n    targetModel: {\r\n      name: \"translate-all.settings.model.name\",\r\n      hint: \"translate-all.settings.model.hint\",\r\n      scope: \"world\",\r\n      config: true,\r\n      type: String,\r\n      default: \"gpt-4o-mini\",\r\n      choices: {},\r\n    },\r\n    promptModel: {\r\n      name: \"translate-all.settings.promptTemplatePath.name\",\r\n      hint: \"translate-all.settings.promptTemplatePath.hint\",\r\n      scope: \"world\",\r\n      config: true,\r\n      type: String,\r\n      filePicker: true, // \uD83D\uDC48 Enables the file picker\r\n      default: \"\",\r\n    },\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  async init(): Promise<void> {\r\n    await this._registerSettings();\r\n  }\r\n\r\n  private async _registerSettings(): Promise<void> {\r\n    this._register(\r\n      \"translate-all\" as TranslateAllNamespace,\r\n      \"targetSystem\" as KeyFor<TranslateAllNamespace>,\r\n      this.settings.targetSystem,\r\n    );\r\n    this._register(\r\n      \"translate-all\" as TranslateAllNamespace,\r\n      \"apiKey\" as KeyFor<TranslateAllNamespace>,\r\n      this.settings.apiKey,\r\n    );\r\n    this._register(\r\n      \"translate-all\" as TranslateAllNamespace,\r\n      \"apiEndpoint\" as KeyFor<TranslateAllNamespace>,\r\n      this.settings.apiEndpoint,\r\n    );\r\n    this._register(\r\n      \"translate-all\" as TranslateAllNamespace,\r\n      \"targetLanguage\" as KeyFor<TranslateAllNamespace>,\r\n      this.settings.targetLanguage,\r\n    );\r\n    const models = await Translator.getModels();\r\n    if (models) {\r\n      this.settings.targetModel.choices = models;\r\n    }\r\n\r\n    this._register(\r\n      \"translate-all\" as TranslateAllNamespace,\r\n      \"targetModel\" as KeyFor<TranslateAllNamespace>,\r\n      this.settings.targetModel,\r\n    );\r\n    this._register(\r\n      \"translate-all\" as TranslateAllNamespace,\r\n      \"promptTemplatePath\" as KeyFor<TranslateAllNamespace>,\r\n      this.settings.promptModel,\r\n    );\r\n  }\r\n\r\n  // TODO: Fix this type casting\r\n  _register(namespace: TranslateAllNamespace, key: KeyFor<TranslateAllNamespace>, config: any): void {\r\n    this.gameSettings.register(namespace as \"core\", key as KeyFor<\"core\">, config);\r\n  }\r\n\r\n  // TODO: Fix this type casting\r\n  static getSetting(\r\n    namespace: TranslateAllNamespace,\r\n    key: KeyFor<TranslateAllNamespace>,\r\n  ): string | boolean | number | object | undefined {\r\n    const gameSettings = game.settings!;\r\n    return gameSettings.get(namespace as \"core\", key as KeyFor<\"core\">);\r\n  }\r\n}\r\n", "import { Directories, SupportedEntries, SupportedSystems, TranslateFunction } from \"types\";\r\nimport { TranslateAllSettingHandler } from \"./settings-handler\";\r\n\r\nexport class DataHandler {\r\n  static getDescription(app: JournalPageSheet | ItemSheet, type: SupportedEntries) {\r\n    const system = TranslateAllSettingHandler.getSetting(\"translate-all\", \"targetSystem\") as SupportedSystems;\r\n\r\n    if (type === SupportedEntries.JOURNAL) {\r\n      return DataHandler.getDescriptionFromJournal(app as JournalPageSheet, system);\r\n    } else if (type === SupportedEntries.ITEM) {\r\n      return DataHandler.getDescriptionFromItem(app as ItemSheet, system);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  static getDescriptionFromJournal(app: JournalPageSheet, system: SupportedSystems): string | undefined {\r\n    switch (system) {\r\n      case SupportedSystems.PATHFINDER2E:\r\n        return app.object.text.content || undefined;\r\n      case SupportedSystems.DND5E:\r\n        return (app?.options as any).document.text.content || undefined; // TODO: fix this type casting\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  static getDescriptionFromItem(app: ItemSheet, system: SupportedSystems): string | undefined {\r\n    switch (system) {\r\n      case SupportedSystems.PATHFINDER2E:\r\n        return (app?.object?.system as any).description.value; // TODO: fix this type casting\r\n      case SupportedSystems.DND5E:\r\n        return (app?.options as any)?.document.system.description.value || undefined; // TODO: fix this type casting\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  static getPathToUpdate(item: SupportedEntries): string {\r\n    const system = TranslateAllSettingHandler.getSetting(\"translate-all\", \"targetSystem\") as SupportedSystems;\r\n    return Directories[system][item];\r\n  }\r\n\r\n  static async getTranslatedDescription(\r\n    app: JournalPageSheet | ItemSheet,\r\n    html: JQuery<HTMLElement>,\r\n    item: SupportedEntries,\r\n    translateFN: TranslateFunction,\r\n  ) {\r\n    const description = DataHandler.getDescription(app, item);\r\n    if (!description) {\r\n      // Do not enable button to translate if there is no description\r\n      return;\r\n    }\r\n    const path = DataHandler.getPathToUpdate(item);\r\n    translateFN(app, html, description, path);\r\n  }\r\n}\r\n", "import { Translator } from \"translator\";\r\nimport { SupportedSystems } from \"types\";\r\nimport { TranslateAllSettingHandler } from \"./settings-handler\";\r\n\r\nexport class HTMLHandler {\r\n  static async translateApp(\r\n    app: JournalPageSheet | ItemSheet,\r\n    html: JQuery<HTMLElement>,\r\n    description: string,\r\n    path: string,\r\n  ): Promise<void> {\r\n    const htmlQuery: JQuery<HTMLElement> = html instanceof jQuery ? html : $(html);\r\n\r\n    const header = htmlQuery.find(\".window-header\");\r\n    if (header.find(\"button.translate-btn\").length) return;\r\n\r\n    const btn = $(\r\n      `<button class=\"translate-btn\" style=\"margin-left: 8px; margin-top: 8px;\">\r\n          Translate Description\r\n        </button>`,\r\n    );\r\n\r\n    btn.on(\"click\", async () => {\r\n      const translated = await Translator.translate(description);\r\n      if (!translated) {\r\n        ui?.notifications?.error(\"Translation failed or returned empty.\");\r\n        return;\r\n      }\r\n      await HTMLHandler.updateDescription(app, translated, path);\r\n    });\r\n\r\n    header.append(btn);\r\n  }\r\n\r\n  private static async updateDescription(\r\n    app: JournalPageSheet | ItemSheet,\r\n    translation: string,\r\n    path: string,\r\n  ): Promise<void> {\r\n    const system = TranslateAllSettingHandler.getSetting(\"translate-all\", \"targetSystem\") as SupportedSystems;\r\n    if (system === SupportedSystems.DND5E) {\r\n      await this.update5eDescription(app, translation, path);\r\n    } else if (system === SupportedSystems.PATHFINDER2E) {\r\n      await this.updatePF2EDescription(app, translation, path);\r\n    }\r\n  }\r\n\r\n  private static async update5eDescription(\r\n    app: JournalPageSheet | ItemSheet,\r\n    translation: string,\r\n    path: string,\r\n  ): Promise<void> {\r\n    try {\r\n      const item = app.document;\r\n      await item.update({ [path]: translation });\r\n      app.render(true);\r\n      app.close();\r\n    } catch (error) {\r\n      ui?.notifications?.error(`Error updating item description: ${error}`);\r\n    }\r\n  }\r\n\r\n  private static async updatePF2EDescription(\r\n    app: JournalPageSheet | ItemSheet,\r\n    translation: string,\r\n    path: string,\r\n  ): Promise<void> {\r\n    const item = app.object;\r\n\r\n    try {\r\n      if (path.includes(\"system\")) {\r\n        await item.update({ [path]: translation });\r\n      } else {\r\n        await item.updateSource({ [path]: translation });\r\n      }\r\n    } catch (error) {\r\n      ui?.notifications?.error(`Error updating item description: ${error}`);\r\n    }\r\n\r\n    app.object.render(true);\r\n    await app.object.sheet?.close();\r\n\r\n    await app.render(true);\r\n    await app.close();\r\n  }\r\n}\r\n", "import { DataHandler } from \"handlers/data-handler\";\r\nimport { HTMLHandler } from \"handlers/html-handler\";\r\nimport { TranslateAllSettingHandler } from \"handlers/settings-handler\";\r\nimport { SupportedEntries, SupportedSystems } from \"types\";\r\n\r\nHooks.once(\"init\", async () => {\r\n  if (!game.settings) {\r\n    ui?.notifications?.error(`Game settings are not available. This module requires Foundry VTT version 10 or later.`);\r\n    return;\r\n  }\r\n  const settingHandler = new TranslateAllSettingHandler();\r\n  await settingHandler.init();\r\n});\r\n\r\nHooks.on(\"renderJournalPageSheet\", async (app: JournalPageSheet, html: JQuery<HTMLElement>) => {\r\n  DataHandler.getTranslatedDescription(app, html, SupportedEntries.JOURNAL, HTMLHandler.translateApp);\r\n});\r\n\r\nHooks.on(\"renderItemSheet\", async (app: ItemSheet, html: JQuery<HTMLElement>) => {\r\n  DataHandler.getTranslatedDescription(app, html, SupportedEntries.ITEM, HTMLHandler.translateApp);\r\n});\r\n\r\nHooks.on(\"renderItemSheet5e\", async (app: ItemSheet, html: JQuery<HTMLElement>) => {\r\n  DataHandler.getTranslatedDescription(app, html, SupportedEntries.ITEM, HTMLHandler.translateApp);\r\n});\r\n\r\nHooks.on(\"renderJournalEntryPageSheet\", async (app: JournalPageSheet, html: JQuery<HTMLElement>) => {\r\n  const system = TranslateAllSettingHandler.getSetting(\"translate-all\", \"targetSystem\") as SupportedSystems;\r\n  if (system !== SupportedSystems.DND5E) {\r\n    // eslint-disable-next-line no-console\r\n    console.warn(\"This feature is only available for D&D 5E.\");\r\n    return;\r\n  }\r\n  DataHandler.getTranslatedDescription(app, html, SupportedEntries.JOURNAL, HTMLHandler.translateApp);\r\n});\r\n"],
  "mappings": "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",
  "names": ["Directories", "Translator", "_Translator", "__name", "description", "path", "promptTemplatePath", "TranslateAllSettingHandler", "promptTemplate", "url", "x", "err", "system", "language", "prompt", "response", "apiKey", "apiEndpoint", "error", "acc", "model", "TranslateAllSettingHandler", "__name", "models", "Translator", "namespace", "key", "config", "DataHandler", "_DataHandler", "__name", "app", "type", "system", "TranslateAllSettingHandler", "item", "Directories", "html", "translateFN", "description", "path", "HTMLHandler", "_HTMLHandler", "__name", "app", "html", "description", "path", "header", "btn", "translated", "Translator", "translation", "system", "TranslateAllSettingHandler", "error", "item", "TranslateAllSettingHandler", "app", "html", "DataHandler", "HTMLHandler"]
}
